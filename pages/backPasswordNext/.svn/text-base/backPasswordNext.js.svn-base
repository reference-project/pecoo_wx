const app = getApp()
const api = require('../../utils/api.js')
const utilMd5 = require('../../utils/md5.js')
Page({

  /**
   * 页面的初始数据
   */
  data: {
    picCodeImg:'',
    userName:'',
    picCode:'',
    messageCode:'',
    password:'',
    verificationCodeTemp:'',
    codeDis: false,
    phoneCode: "获取验证码",
    flag: false,
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.setData({
      userName: options.mobile
      //userName: '18365296578'
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    
  },
  setPicCode: function (e) {
    this.data.picCode = e.detail.value;
  },
  messageCodeInput: function (e) {
    this.data.messageCode = e.detail.value;
  },
  passwordInput: function (e) {
    this.data.password = e.detail.value;
  },
  validateImg: function () {
    //console.log("用户登录,获取图片验证码", this.data.userName)
    let verificationCode = api.verificationCodeTempUrl({});
    verificationCode.then((res) => {
      this.setData({
        verificationCodeTemp: res
      })
      let validateImg = api.validateImgUrl({
        getVerificationCodeTemp: res
      });
      validateImg.then((res) => {
        var array = wx.base64ToArrayBuffer(res)
        var base64 = wx.arrayBufferToBase64(array)
        this.setData({ picCodeImg: 'data:image/png;base64,' + base64 })
      })
    })
  },
  verificationCode(){//用户登录注册,获取短信验证码
    if (!this.data.userName) {
      return app.showErrorModal('请输入您的手机号！');
    }
    if (!this.data.picCode) {
      return app.showErrorModal('请输入图片验证码！');
    }
    var _this = this
    let verificationCode = api.verificationCodeUrl({
      sourceMode: app.globalData.sourceMode,
      verificationCodeTemp: this.data.verificationCodeTemp,
      picCode: this.data.picCode,
      mobile: this.data.userName,
      reset: "0"
    });
    verificationCode.then((res) => {
      if (res.code == '0000') {//图片验证码填写错误
        _this.setData({
          phoneCode: 60
        })
        let time = setInterval(() => {
          let phoneCode = _this.data.phoneCode
          phoneCode--
          _this.setData({
            phoneCode: phoneCode
          })
          if (phoneCode == 0) {
            clearInterval(time)
            _this.setData({
              phoneCode: "获取验证码",
              flag: true
            })
          }
        }, 1000)
      } else {
        this.validateImg()
        _this.setData({
          codeDis: false
        })
        wx.showToast({
          title: data.respMessage,
          icon: "loading"
        })
        setTimeout(function () {
          wx.hideToast()
        }, 2000)
      }
    })
  },
  register(){
    if (!this.data.userName) {
      return app.showErrorModal('请输入您的手机号！');
    }
    if (!this.data.picCode) {
      return app.showErrorModal('请输入图片验证码！');
    }
    if (!this.data.password) {
      return app.showErrorModal('请输入密码！');
    }
    let pwd = utilMd5.hexMD5(this.data.password);
    let resetPassword = api.resetPasswordUrl({
      sourceMode: app.globalData.sourceMode,
      mobile: this.data.userName,
      pwd: pwd,
      messageCode: this.data.messageCode
    });
    resetPassword.then((res) => {
      if (res.code == "0000") {
        wx.setStorageSync('tokenId', res.tokenId);
        wx.setStorageSync('userName', res.userName);
        wx.setStorageSync('isCertificated', res.isCertificated);
        wx.setStorageSync('isBindCard', res.isBindCard);
        wx.setStorageSync('shareCode', res.shareCode);
        wx.setStorageSync('isChannel', res.isChannel);
        wx.showToast({
          title: '找回密码成功',
          icon: 'success',
          success: () => {
            setTimeout(function () {
              wx.switchTab({
                url: `/pages/index/index`
              })
            }, 1500);
          }
        })
      }else{
        return app.showErrorModal(res.message);
      }
    }).catch((error) => {
      console.log(error)
    })
  },
  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    this.validateImg();
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
    
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
    
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
    
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
    
  },

  /**
   * 用户点击右上角分享
   */
  // onShareAppMessage: function () {
    
  // }
})